// Abstract class declaration
abstract class Animal {
    // Instance variable
    protected String name;

    // Constructor
    public Animal(String name) {
        this.name = name;
    }

    // Abstract method (no implementation)
    public abstract void makeSound();

    // Concrete method (with implementation)
    public void eat() {
        System.out.println(name + " is eating.");
    }
}

// Subclass that extends the abstract class
class Dog extends Animal {
    // Constructor
    public Dog(String name) {
        super(name); // Call the constructor of the abstract class
    }

    // Implementation of the abstract method
    @Override
    public void makeSound() {
        System.out.println(name + " says: Woof! Woof!");
    }
}

// Another subclass that extends the abstract class
class Cat extends Animal {
    // Constructor
    public Cat(String name) {
        super(name); // Call the constructor of the abstract class
    }

    // Implementation of the abstract method
    @Override
    public void makeSound() {
        System.out.println(name + " says: Meow! Meow!");
    }
}

// Main class
public class AbstractClassDemo {
    public static void main(String[] args) {
        // Create instances of subclasses
        Animal dog = new Dog("Buddy");
        Animal cat = new Cat("Whiskers");

        // Call methods on the objects
        dog.makeSound();  // Call the implemented abstract method
        dog.eat();        // Call the concrete method

        cat.makeSound();  // Call the implemented abstract method
        cat.eat();        // Call the concrete method
    }
}
